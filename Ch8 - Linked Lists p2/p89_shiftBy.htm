<html>
<head>
  <title>SList: Is Palindrome</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script type="text/javascript">
  // Reverse the node sequence. Given an SList object, the .head property should point to the previously-last node,
  // and the rest of the nodes should follow similarly from back to front.

  $(document).ready(function(){
    function SLL(){
      this.head=null;
    }

    function Node(val){
      this.val=val;
      this.next=null;
    }

    SLL.prototype.addFront = function(val){
      if(!this.head){
        this.head= new Node(val);
        return this;
      }
      var temp=this.head;
      this.head=new Node(val);
      this.head.next=temp;
      return this;
    }


    SLL.prototype.iterate = function(){
      var current=this.head;
      while(current){
        console.log(current.val);
        current=current.next;
      }
    }

    SLL.prototype.lengthOf = function(){
      var current=this.head;
      var count=0;
      while(current){
        count++;
        current=current.next;
      }
      return count;
    }

    SLL.prototype.shiftBy = function(shift){
      if(!this.head|| shift===0){
        return this.head;
      }else if(Math.abs(shift)> this.lengthOf()){
        return false;
      }

      var counter=shift<0 ? -(shift)+1: this.lengthOf()-shift+1;

      var temp=this.head;
      var current=temp;
      var nodeCount=1;
      while(current && nodeCount<(counter-1)){
        current = current.next;
        nodeCount++;
      }
      this.head=current.next;
      current.next=null;
      current=this.head;
      while(current.next){
        current=current.next;
      }
      current.next=temp;
    }

    list = new SLL();
    list.addFront(1).addFront(2).addFront(3).addFront(4);
    list.shiftBy(-3);
    list.iterate();


  });

  </script>
</head>
<body>

</body>
</html>
