<html>
<head>
  <title>Hash Table</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script type="text/javascript">

  $(document).ready(function(){

    function HashTable() {
      // given fixed size of array of 26 slots
      this.table = new Array(26);
    }

    HashTable.prototype.buildLinks = function() {
      // set an empty array for all indexes in this.table
      for(var i=0; i<26; i++){
        this.table[i] = [];
      }
    }

    HashTable.prototype.linkBuilt = function() {
      // determines if links have been built yet
      return Array.isArray(this.table[0]);
    }

    HashTable.prototype.simpleHash = function(data) {
      // determines the hash value given data
      // how can we use the ASCII values to find appropriate data (use charCodeAt())
      return data.charCodeAt(0)% this.table.length;;
    }
    HashTable.prototype.betterHash = function(data) {
      // how can we write a better Hash using ASCII values?
      var hash = '';
      hash += data.charCodeAt(0).toString();
      hash += data.charCodeAt(1).toString();
      hash += data.charCodeAt(2).toString();
      hash = Number(hash);
      return hash%26;
    }
    HashTable.prototype.simplePut = function(data) {
      // place data in appropriate place by using simpleHash
      var index = this.simpleHash(data);
      this.table[index] = data;
    }
    HashTable.prototype.linkPut = function(data) {
      // build links if not built yet and place data in the right place
      if(!this.linkBuilt()){ this.buildLinks(); }
      var index = this.betterHash(data);
      this.table[index].push(data);
    }

    HashTable.prototype.showDistribution = function() {
      // shows distribution of hash table
      for(var i = 0; i < this.table.length; i++) {
        console.log(this.table[i]);
      }
    }
    var names = ["Tony", "Tori", "Kate", "Kyle", "Thomas", "Dale",
                 "David", "Daisy", "Andy", "Albert", "Dane", "Shane", "Lane",
                 "Janet", "Katelyn", "Janet", "Vivian", "Joe"];

    console.log('SIMPLE HASH ---');

    var simpleHashTable = new HashTable();
    for(var i = 0; i < names.length; i++) {
      simpleHashTable.simplePut(names[i]);
    }
    simpleHashTable.showDistribution();

    console.log('BETTER HASH ---');
    var betterHashTable = new HashTable();

    for(var i = 0; i < names.length; i++) {
      betterHashTable.linkPut(names[i]);
    }
    betterHashTable.showDistribution();
  });


  </script>
</head>
<body>

</body>
</html>
